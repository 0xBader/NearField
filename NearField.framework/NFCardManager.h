/*
* This header is generated by classdump-dyld 0.7
* Operating System: Version 8.1 (Build 12B411)
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <NearField/NFCardManagerEventListenerDelegate.h>

@protocol OS_dispatch_queue, NFCardManagerDelegate;
@class NFCardManagerInternal, NFCardManagerEventListener, NSObject, NSString;

@interface NFCardManager : NSObject <NFCardManagerEventListenerDelegate> {

	NFCardManagerInternal* _cm;
	NFCardManagerEventListener* _evtListener;
	NSObject*<OS_dispatch_queue> _callbackQueue;
	NSObject*<OS_dispatch_queue> _workQueue;
	id<NFCardManagerDelegate> _delegate;

}

@property (assign) id<NFCardManagerDelegate> delegate;
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)dealloc;
-(void)setDelegate:(id<NFCardManagerDelegate>)arg1 ;
-(id<NFCardManagerDelegate>)delegate;
-(id)initWithQueue:(id)arg1 ;
-(void)cardManagerEventListener:(id)arg1 didReceiveRemoteAdminNotification:(id)arg2 ;
-(void)cardManagerEventListener:(id)arg1 secureElementDidBecomeAvailable:(bool)arg2 ;
-(bool)startEventListener;
-(void)stopEventListener;
-(void)installedAIDs:(/*^block*/ id)arg1 ;
-(void)serverRegistrationInfo:(/*^block*/ id)arg1 ;
-(unsigned)isInRestrictedMode;
-(void)activateOnlyCardWithAID:(id)arg1 authorization:(id)arg2 callback:(/*^block*/ id)arg3 ;
-(void)authorizeEcommerceTransaction:(id)arg1 authorization:(id)arg2 callback:(/*^block*/ id)arg3 ;
-(void)cardWithAID:(id)arg1 callback:(/*^block*/ id)arg2 ;
-(void)activateCardsWithAIDs:(id)arg1 callback:(/*^block*/ id)arg2 ;
-(void)deactivateCardsWithAIDs:(id)arg1 callback:(/*^block*/ id)arg2 ;
-(void)setPaymentCardWithAID:(id)arg1 callback:(/*^block*/ id)arg2 ;
-(void)authorizeContactlessPaymentWithAuthToken:(id)arg1 callback:(/*^block*/ id)arg2 ;
-(void)deauthorizeContactlessPaymentWithCallback:(/*^block*/ id)arg1 ;
-(void)deleteAllCards:(/*^block*/ id)arg1 ;
-(void)setupNewUser:(/*^block*/ id)arg1 ;
-(void)signChallenge:(id)arg1 callback:(/*^block*/ id)arg2 ;
-(void)setAuthentication:(id)arg1 callback:(/*^block*/ id)arg2 ;
-(void)activateOnlyCardWithAID:(id)arg1 callback:(/*^block*/ id)arg2 ;
-(id)initWithDelegate:(id)arg1 queue:(id)arg2 idleExit:(bool)arg3 ;
-(void)queueServerConnection:(/*^block*/ id)arg1 ;
-(void)serverRegistrationInfo:(id)arg1 callback:(/*^block*/ id)arg2 ;
-(void)serialNumber:(/*^block*/ id)arg1 ;
-(void)certificates:(/*^block*/ id)arg1 ;
-(void)isProductionSigned:(/*^block*/ id)arg1 ;
-(void)setRegistrationState:(bool)arg1 callback:(/*^block*/ id)arg2 ;
-(void)deleteCardsWithAIDs:(id)arg1 callback:(/*^block*/ id)arg2 ;
@end

